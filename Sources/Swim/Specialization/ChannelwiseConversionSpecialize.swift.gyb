%{
from .type import *
}%

% for pt in pixel_types:
% for dt in data_types:
extension Image where P == ${pt}, T == ${dt} {
    public mutating func convert(_ f: (Int, Int, Pixel<P, T>)->Pixel<P, T>) {
        self._convert(f)
    }

    public mutating func channelwiseConvert(_ f: (T)->T) {
        self._channelwiseConvert(f)
    }
% for dt2 in data_types:

    public func channelwiseConverted(_ f: (T) -> ${dt2}) -> Image<P, ${dt2}> {
        return self._channelwiseConverted(f)
    }
% end
}

% end
% end
