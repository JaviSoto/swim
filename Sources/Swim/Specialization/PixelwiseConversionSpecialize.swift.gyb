%{
from type import *
}%

// MARK: - Same Pixel/Data type conversion
% for pt in pixel_types:
% for dt in bool_data_types + int_data_types + fp_data_types:
extension Image where  P == ${pt}, T == ${dt} {
    public mutating func convert(_ f: (Pixel<P, T>)->Pixel<P, T>) {
        _convert(f)
    }
    public mutating func unsafeConvert(_ f: (UnsafeMutableBufferPointer<T>)->Void) {
        _unsafeConvert(f)
    }
}

% end
% end

// MARK: Intensity
% for dt in bool_data_types + int_data_types + fp_data_types:
extension Image where P == Intensity, T == ${dt} {
    public mutating func convert(_ f: (T)->T) {
        _convert(f)
    }
}

% end

// MARK: - General conversion
% for pt in pixel_types:
% for dt in bool_data_types + int_data_types + fp_data_types:
extension Image where P == ${pt}, T == ${dt} {
% for dt2 in bool_data_types + int_data_types + fp_data_types:
    public func converted(_ f: (Pixel<P, T>)->${dt2}) -> Image<Intensity, ${dt2}> {
        return _converted(f)
    }
% for pt2 in pixel_types:
    public func converted(_ f: (Pixel<P, T>)->Pixel<${pt2}, ${dt2}>) -> Image<${pt2}, ${dt2}> {
        return _converted(f)
    }
% end

% end
}

% end
% end
